name = Basic physics:
- priority: 1, overwrite conflicting values
1: //by default
- values = timescale, type = constant, value = 1, duration = infinite, repeating = true //by default
- values = tickrate, type = constant, value = 100, duration = infinite
- values = gravity, type = constant, value = 20, duration = infinite
- triggers = time
- triggers relation = and //by default
- reset values = true //by default

name = Basic movement:
- priority: 1, overwrite conflicting values
1:
- values = player's velocity(camera dependant every phys update, normalised, forwards), type = going from one value to another one smoothly, starting value = 0, ending value = 120, interval between values = 100, duration = infinite
- triggers = KeyPress(W)
2:
- values = player's velocity(camera dependant every phys update, normalised, backwards), type = going from one value to another one smoothly, starting value = 0, ending value = 120, interval between values = 100, duration = infinite
- triggers = KeyPress(S)
3:
- values = player's velocity(camera dependant every phys update, normalised, left), type = going from one value to another one smoothly, starting value = 0, ending value = 120, interval between values = 100, duration = infinite
- triggers = KeyPress(A)
4:
- values = player's velocity(camera dependant every phys update, normalised, right), type = going from one value to another one smoothly, starting value = 0, ending value = 120, interval between values = 100, duration = infinite
- triggers = KeyPress(D)
5:

name = Classic jumping:
- priority: 1, overwrite conflicting values
- values = player's velocity(camera dependant every phys update, not normalised, upwards), type = jump math, value = 3, duration = infinite
- triggers = Player on ground, KeyPress(Space)
- triggers relation = and

name = Infinity jumping:
- priority: 1, overwrite conflicting values
- values = player's velocity(camera dependant every phys update, not normalised, upwards), type = jump math, value = 3, duration = infinite
- triggers = Player on ground, KeyPress(Space)
- triggers relation = and

name = Jetpack:
- priority: 1, overwrite conflicting values
- values = player's velocity(camera dependant every phys update, not normalised, upwards), type = jump math, value = 3, duration = infinite
- triggers = Player on ground, KeyPress(Space)
- triggers relation = and


- Values = Player's size (upwards): constant, 1.8, repeating; Triggers = Not KeyPress(CTRL)